consumes:
- application/json
definitions:
  RawPayload:
    example:
      check_id: 444d57fe-f85c-469f-997a-b62a14ab64a4
      raw: '{ raw : "BASE_64_FORMAT" }'
      scan_id: 62676116-e940-48bc-8c2c-0902c527a1a4
      scan_start_time: "2006-04-22T05:57:42Z"
    properties:
      check_id:
        description: Check UUID
        example: 444d57fe-f85c-469f-997a-b62a14ab64a4
        format: uuid
        type: string
      raw:
        description: Raw result of a Check. It's a JSON with a BASE64 encoded value
          of the raw result
        example: '{ raw : "BASE_64_FORMAT" }'
        type: string
      scan_id:
        description: Scan UUID
        example: 62676116-e940-48bc-8c2c-0902c527a1a4
        format: uuid
        type: string
      scan_start_time:
        description: Scan start time
        example: "2006-04-22T05:57:42Z"
        format: date-time
        type: string
    title: RawPayload
    type: object
  ReportPayload:
    example:
      check_id: f7201c56-42e7-47b9-9186-e04f66f48721
      report: '{ report : "{"report":"{\"check_id\":\"aabbccdd-abcd-0123-4567-abcdef012345\",
        .....}}" }'
      scan_id: fde5d3fd-6c79-4195-a41c-34042c331aec
      scan_start_time: "1995-08-24T02:02:26Z"
    properties:
      check_id:
        description: Check UUID
        example: f7201c56-42e7-47b9-9186-e04f66f48721
        format: uuid
        type: string
      report:
        description: Report of a Check. It's a JSON containing the value of the report
        example: '{ report : "{"report":"{\"check_id\":\"aabbccdd-abcd-0123-4567-abcdef012345\",
          .....}}" }'
        minLength: 2
        pattern: ^[[:print:]]+
        type: string
      scan_id:
        description: Scan UUID
        example: fde5d3fd-6c79-4195-a41c-34042c331aec
        format: uuid
        type: string
      scan_start_time:
        description: Scan start time
        example: "1995-08-24T02:02:26Z"
        format: date-time
        type: string
    title: ReportPayload
    type: object
host: localhost:8080
info:
  description: A component to handle persistence service results storage
  title: Vulcan Persistence Results Uploader
  version: ""
paths:
  /healthcheck:
    get:
      description: Get the health status for the application
      operationId: healthcheck#show
      produces:
      - text/plain
      responses:
        "200":
          description: OK
      schemes:
      - http
      summary: show healthcheck
      tags:
      - healthcheck
  /v1/logs/{date}/{scan}/{check}:
    get:
      description: Download a log
      operationId: Results#getLog
      parameters:
      - description: Check ID
        in: path
        name: check
        required: true
        type: string
      - description: Report date
        in: path
        name: date
        required: true
        type: string
      - description: Scan ID
        in: path
        name: scan
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - http
      summary: getLog Results
      tags:
      - Results
  /v1/raw:
    post:
      description: Update the Raw of a Check
      operationId: Results#raw
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/RawPayload'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      schemes:
      - http
      summary: raw Results
      tags:
      - Results
  /v1/report:
    post:
      description: Update the Report of a Check
      operationId: Results#report
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/ReportPayload'
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
      schemes:
      - http
      summary: report Results
      tags:
      - Results
  /v1/reports/{date}/{scan}/{check}:
    get:
      description: Download a report
      operationId: Results#getReport
      parameters:
      - description: Check ID
        in: path
        name: check
        required: true
        type: string
      - description: Report date
        in: path
        name: date
        required: true
        type: string
      - description: Scan ID
        in: path
        name: scan
        required: true
        type: string
      produces:
      - text/plain
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      schemes:
      - http
      summary: getReport Results
      tags:
      - Results
produces:
- application/json
- application/xml
- application/gob
- application/x-gob
responses:
  BadRequest:
    description: Bad Request
  Created:
    description: Created
  OK:
    description: OK
schemes:
- http
swagger: "2.0"
